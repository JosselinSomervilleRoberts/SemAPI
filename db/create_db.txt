CREATE TABLE lemmas (
	lemma_id serial PRIMARY KEY,
	lemma VARCHAR (32) NOT NULL,
	lemma_na VARCHAR (32) NOT NULL,
    type VARCHAR(8),
    UNIQUE(lemma, type),
	freq FLOAT DEFAULT 0,
	vector FLOAT ARRAY[300] NOT NULL
);

CREATE TABLE orthos (
    ortho_id serial PRIMARY KEY,
    lemma_id serial NOT NULL,
	ortho VARCHAR (32) UNIQUE NOT NULL,
	ortho_na VARCHAR (32) NOT NULL,
    freq FLOAT DEFAULT 0,
    genre VARCHAR (2) DEFAULT '',
    number VARCHAR (2) DEFAULT '',
    nb_syll SMALLINT,
    nb_letters SMALLINT NOT NULL,
	vector FLOAT ARRAY[300] NOT NULL,

    CONSTRAINT fk_lemmas
  	    	FOREIGN KEY(lemma_id)
			REFERENCES lemmas(lemma_id)
			ON DELETE CASCADE
);

CREATE TABLE sessions (
	session_id serial PRIMARY KEY,
	ortho_id serial UNIQUE NOT NULL,
	utc_start bigserial,
	utc_stop bigserial,
	difficulty smallint DEFAULT 1,
	
	CONSTRAINT fk_orthos
  	    	FOREIGN KEY(ortho_id)
			REFERENCES orthos(ortho_id )
			ON DELETE CASCADE
);


CREATE TABLE closest_words (
	id serial PRIMARY KEY,
	session_id serial NOT NULL,
	ortho_id serial NOT NULL,
	UNIQUE (session_id , ortho_id),
	score FLOAT DEFAULT 1 NOT NULL,

	CONSTRAINT fk_orthos
  	    	FOREIGN KEY(ortho_id)
			REFERENCES orthos(ortho_id )
			ON DELETE CASCADE,

	CONSTRAINT fk_sessions
      		FOREIGN KEY(session_id)
	  		REFERENCES sessions(session_id )
				ON DELETE CASCADE
);


CREATE TABLE hints (
	id serial PRIMARY KEY,
	session_id serial NOT NULL,
	ortho_id serial NOT NULL,
	UNIQUE (session_id , ortho_id),
	rectified_score FLOAT DEFAULT 1 NOT NULL,

	CONSTRAINT fk_orthos
  	    	FOREIGN KEY(ortho_id)
			REFERENCES orthos(ortho_id )
			ON DELETE CASCADE,

	CONSTRAINT fk_sessions
      		FOREIGN KEY(session_id)
	  		REFERENCES sessions(session_id )
				ON DELETE CASCADE
);


CREATE TABLE users (
	user_id VARCHAR(15) UNIQUE,
	name VARCHAR(10) NOT NULL,
	tag INTEGER NOT NULL,
	UNIQUE(name, tag)
);


CREATE TABLE corrections (
	correction_id serial PRIMARY KEY,
	ortho_id serial NOT NULL,
	word VARCHAR (32) UNIQUE NOT NULL,

	CONSTRAINT fk_orthos
  	    	FOREIGN KEY(ortho_id)
			REFERENCES orthos(ortho_id )
			ON DELETE CASCADE
);


CREATE TABLE requests (
	request_id serial PRIMARY KEY,
	method VARCHAR(5) DEFAULT 'GET' NOT NULL,
	route VARCHAR (25) NOT NULL,
	params VARCHAR (100),
	user_id VARCHAR (15),
	status SMALLINT DEFAULT 500 NOT NULL,
	utc_date_ms bigserial,

	CONSTRAINT fk_users
      		FOREIGN KEY(user_id)
	  		REFERENCES users(user_id )
				ON DELETE CASCADE
);


CREATE TABLE scores (
	score_id serial PRIMARY KEY,
	session_id serial NOT NULL,
	user_id VARCHAR (15),
	ortho_id serial NOT NULL,
	score FLOAT DEFAULT 0 NOT NULL,
	UNIQUE(session_id, user_id, ortho_id),

	CONSTRAINT fk_sessions
      		FOREIGN KEY(session_id)
	  		REFERENCES sessions(session_id )
				ON DELETE CASCADE,

	CONSTRAINT fk_users
      		FOREIGN KEY(user_id)
	  		REFERENCES users(user_id )
				ON DELETE CASCADE,

	CONSTRAINT fk_orthos
  	    	FOREIGN KEY(ortho_id)
			REFERENCES orthos(ortho_id )
			ON DELETE CASCADE
);


CREATE TABLE final_scores (
	id serial PRIMARY KEY,
	session_id serial NOT NULL,
	user_id VARCHAR (15),
	score FLOAT DEFAULT 0 NOT NULL,
	nb_attempts INTEGER DEFAULT 1 NOT NULL,
	has_won BOOLEAN DEFAULT False,
	utc_date_ms bigserial,
	UNIQUE(session_id, user_id),

	CONSTRAINT fk_sessions
      		FOREIGN KEY(session_id)
	  		REFERENCES sessions(session_id )
				ON DELETE CASCADE,

	CONSTRAINT fk_users
      		FOREIGN KEY(user_id)
	  		REFERENCES users(user_id )
				ON DELETE CASCADE
);

CREATE TABLE activity (
	id serial PRIMARY KEY,
	session_id serial NOT NULL,
	user_id VARCHAR (15),
	UNIQUE(session_id, user_id),
	utc_start_ms bigserial,
	utc_end_ms bigserial DEFAULT 0 NOT NULL,
	active BOOLEAN DEFAULT True,

	CONSTRAINT fk_sessions
      		FOREIGN KEY(session_id)
	  		REFERENCES sessions(session_id )
				ON DELETE CASCADE,

	CONSTRAINT fk_users
      		FOREIGN KEY(user_id)
	  		REFERENCES users(user_id )
				ON DELETE CASCADE
);